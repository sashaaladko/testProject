{"version":3,"sources":["components/shared-components/Loading/index.js","redux/actions/Users.js","components/shared-components/Flex/index.js","configs/EnvironmentConfig.js","configs/AppConfig.js","redux/constants/Auth.js","constants/ThemeConstant.js","redux/reducers/Auth.js","redux/constants/Theme.js","redux/reducers/Theme.js","redux/reducers/Users.js","redux/reducers/index.js","configs/FirebaseConfig.js","auth/FirebaseAuth.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/Users.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","components/util-components/Icon/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/shared-components/ColorPicker/index.js","components/layout-components/NavLanguage.js","components/layout-components/ThemeConfigurator.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/entries/en_US.js","lang/entries/zh_CN.js","lang/entries/fr_FR.js","lang/index.js","lang/entries/ja_JP.js","views/index.js","App.js","serviceWorker.js","index.js","redux/actions/Auth.js"],"names":["Icon","_jsx","LoadingOutlined","style","fontSize","spin","Loading","props","align","cover","className","children","Spin","indicator","defaultProps","FETCH_USERS_REQUEST","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","fetchUsersRequest","type","Flex","alignItems","justifyContent","mobileFlex","flexDirection","APP_NAME","API_BASE_URL","API_ENDPOINT_URL","APP_PREFIX_PATH","AUTH_PREFIX_PATH","THEME_CONFIG","navCollapsed","sideNavTheme","SIDE_NAV_LIGHT","locale","navType","NAV_TYPE_SIDE","topNavColor","headerNavColor","mobileNav","currentTheme","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","ROW_GUTTER","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_DARK","NAV_TYPE_TOP","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","arguments","length","undefined","action","TOGGLE_COLLAPSED_NAV","CHANGE_LOCALE","SIDE_NAV_STYLE_CHANGE","NAV_TYPE_CHANGE","TOP_NAV_COLOR_CHANGE","HEADER_NAV_COLOR_CHANGE","TOGGLE_MOBILE_NAV","SWITCH_THEME","initTheme","theme","initialState","users","error","userReducer","payload","reducers","combineReducers","Theme","Auth","user","Users","FirebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firebaseConfig","firestore","googleAuthProvider","currentUser","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","FirebaseService","TwitterAuthProvider","GithubAuthProvider","async","email","password","signInWithEmailAndPassword","then","catch","err","signInEmailRequest","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","signInFacebookRequest","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","takeEvery","_ref","call","put","showAuthMessage","setItem","uid","authenticated","signOutUser","removeItem","signOutSuccess","signUpWithFBEmail","_ref2","signUpSuccess","signInWithFBGoogle","signInWithGoogleAuthenticated","signInWithFacebook","signInWithFacebookAuthenticated","rootSaga","all","fork","fetchUsersSaga","response","axios","get","data","fetchUsersFailure","watchFetchUsers","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","FormattedMessage","withRef","Component","render","this","_Fragment","React","createElement","navigationConfig","key","path","title","icon","DashboardOutlined","breadcrumb","submenu","ShoppingCartOutlined","ShoppingOutlined","UserOutlined","GroupOutlined","GiftOutlined","ShopOutlined","TeamOutlined","MailOutlined","SettingOutlined","MobileOutlined","ProfileOutlined","Utils","getNameInitial","name","initials","match","shift","pop","toUpperCase","getRouteInfo","navTree","route","p","hasOwnProperty","getColorContrast","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","color","percent","R","G","B","toString","rgbaToHex","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","getSignNum","number","positive","negative","antdTableSorter","toLowerCase","filterArray","list","value","filter","item","deleteArrayRow","wildCardSearch","input","searchText","getBreakPoint","screens","breakpoints","push","toggleCollapsedNav","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","IntlMessage","id","setDefaultOpen","keyList","keyString","arr","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","includes","closeMobileNav","mode","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","subMenuSecond","_jsxs","Item","Link","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","Sider","Layout","width","collapsed","Scrollbars","autoHide","MenuContent","getLogoWidthGutter","isNavTop","mobileLogo","getLogo","logoType","getLogoDisplay","src","alt","onClose","Drawer","placement","closable","visible","bodyStyle","padding","Logo","ArrowLeftOutlined","ColorPicker","colorChange","setVisible","useState","pickerColor","setPickerColor","boxColor","setBoxColor","useEffect","onPickerDropdown","SketchPicker","onChange","rgb","SelectedLanguage","language","lang","langId","getLanguageDetail","langName","maxWidth","DownOutlined","_ref3","onLocaleChange","configDisplay","languageOption","CheckOutlined","Dropdown","overlay","trigger","href","e","preventDefault","GlobalOutlined","colorOptions","ListOption","selector","disabled","vertical","mapDispatchToProps","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","isCollapse","switcher","themes","useThemeSwitcher","Radio","Group","size","onNavTypeClick","target","Button","Switch","checked","isChecked","changedTheme","NavLanguage","CopyToClipboard","text","configState","JSON","stringify","onCopy","success","CopyOutlined","block","NavPanel","constructor","showDrawer","setState","ThemeConfigurator","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","setValue","options","setOptions","inputRef","useRef","current","focus","AutoComplete","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","Input","placeholder","prefix","SearchOutlined","CloseOutlined","Header","searchActive","setSearchActive","onSearchClose","navMode","MenuUnfoldOutlined","MenuFoldOutlined","NavSearch","breadcrumbData","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","location","pathSnippets","pathname","buildBreadcrumb","_","url","slice","Breadcrumb","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","AppViews","Suspense","fallback","Route","component","lazy","Redirect","from","memo","Content","AppLayout","currentRouteInfo","isNavSide","status","HeaderNav","TopNav","SideNav","paddingLeft","MobileNav","AuthLayout","AuthViews","EnLang","antd","antdEnUS","messages","enMsg","ZhLang","antdZhCn","zhMsg","FrLang","antdFrFR","frMsg","AppLocale","en","enLang","zh","zhLang","fr","frLang","ja","antdJaJP","jaMsg","currentAppLocale","IntlProvider","ConfigProvider","exact","dark","light","App","Provider","ThemeSwitcherProvider","themeMap","defaultTheme","insertionPoint","Router","Views","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","hideAuthMessage","showLoading"],"mappings":"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","file":"static/js/main.026cce2f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","\nexport const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE';\n\nexport const fetchUsersRequest = () => ({\n  type: FETCH_USERS_REQUEST,\n});\n\nexport const fetchUsersSuccess = users => ({\n  type: FETCH_USERS_SUCCESS,\n  payload: users,\n});\n\nexport const fetchUsersFailure = error => ({\n  type: FETCH_USERS_FAILURE,\n  payload: error,\n});\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Emilus';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\nexport const APP_PREFIX_PATH = '/app';\r\nexport const AUTH_PREFIX_PATH = '/auth';\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_LIGHT,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '',\r\n\tmobileNav: false,\r\n\tcurrentTheme: 'light'\r\n};\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV';\r\nexport const SWITCH_THEME = 'SWITCH_THEME';","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {\r\n  ...THEME_CONFIG\r\n};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    case SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        currentTheme: action.currentTheme\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","import {\n  FETCH_USERS_REQUEST,\n  FETCH_USERS_SUCCESS,\n  FETCH_USERS_FAILURE,\n} from '../actions/Users';\n\nconst initialState = {\n  loading: false,\n  users: [],\n  error: '',\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_USERS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_USERS_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload,\n        error: '',\n      };\n    case FETCH_USERS_FAILURE:\n      return {\n        loading: false,\n        users: [],\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\nimport Users from './Users';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth,\r\n    user: Users\r\n});\r\n\r\nexport default reducers;","const FirebaseConfig = {\r\n  apiKey: 'AIzaSyAOWoRQGoegkmwnCca7B2GG5GUG_ZP1lcM',\r\n  authDomain: 'emilus.firebaseapp.com',\r\n  databaseURL: 'https://emilus.firebaseio.com',\r\n  projectId: 'emilus',\r\n  storageBucket: 'emilus.appspot.com',\r\n  messagingSenderId: '807555350717',\r\n  appId: '1:807555350717:web:145ba7c21af47203a2f7d4',\r\n  measurementId: 'G-8KE7HJB252'\r\n};\r\n\r\nexport default FirebaseConfig\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { call, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// Action Types\nexport const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\nexport const FETCH_USERS_FAILURE = 'FETCH_USERS_FAILURE';\n\n// Action Creators\nexport const fetchUsersRequest = () => ({ type: FETCH_USERS_REQUEST });\nexport const fetchUsersSuccess = users => ({ type: FETCH_USERS_SUCCESS, payload: users });\nexport const fetchUsersFailure = error => ({ type: FETCH_USERS_FAILURE, payload: error });\n\n// Saga to fetch users\nfunction* fetchUsersSaga() {\n  try {\n    const response = yield call(axios.get, 'https://jsonplaceholder.typicode.com/users');\n    yield put(fetchUsersSuccess(response.data));\n  } catch (error) {\n    yield put(fetchUsersFailure(error.message));\n  }\n}\n\n// Watcher Saga\nfunction* watchFetchUsers() {\n  yield takeEvery(FETCH_USERS_REQUEST, fetchUsersSaga);\n}\n\nexport default watchFetchUsers;\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\nimport Users from './Users'\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(), Users()\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import { \r\n  DashboardOutlined, ShoppingCartOutlined, UserOutlined, \r\n  TeamOutlined, GiftOutlined, MailOutlined, ShopOutlined,\r\n  ShoppingOutlined, GroupOutlined, SettingOutlined, \r\n  MobileOutlined, ProfileOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'general',\r\n  path: `${APP_PREFIX_PATH}/home`,\r\n  title: 'Основное',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'home',\r\n      path: `${APP_PREFIX_PATH}/home`,\r\n      title: 'home',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'catalog',\r\n      path: `${APP_PREFIX_PATH}/catalog`,\r\n      title: 'Каталог',\r\n      icon: ShoppingCartOutlined,\r\n      breadcrumb: true,\r\n      submenu: [\r\n        {\r\n          key: 'products',\r\n          path: `${APP_PREFIX_PATH}/catalog/products`,\r\n          title: 'Товары',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'categories',\r\n          path: `${APP_PREFIX_PATH}/catalog/categories`,\r\n          title: 'Категории',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'collections',\r\n          path: `${APP_PREFIX_PATH}/catalog/collections`,\r\n          title: 'Коллекции',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'combo',\r\n          path: `${APP_PREFIX_PATH}/catalog/combo`,\r\n          title: 'Комбо',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: 'orders',\r\n      path: `${APP_PREFIX_PATH}/orders`,\r\n      title: 'Заказы',\r\n      icon: ShoppingOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'clinets',\r\n      path: `${APP_PREFIX_PATH}/clients`,\r\n      title: 'Клиенты',\r\n      icon: UserOutlined,\r\n      breadcrumb: false,\r\n      submenu: [\r\n        {\r\n          key: 'client-list',\r\n          path: `${APP_PREFIX_PATH}/clients/list`,\r\n          title: 'Список клиентов',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'client-groups',\r\n          path: `${APP_PREFIX_PATH}/clients/groups`,\r\n          title: 'Группы клиентов',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: 'banners',\r\n      path: `${APP_PREFIX_PATH}/banners`,\r\n      title: 'Баннеры',\r\n      icon: GroupOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'promocodes',\r\n      path: `${APP_PREFIX_PATH}/promocodes`,\r\n      title: 'Промокоды',\r\n      icon: GiftOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'offline-points',\r\n      path: `${APP_PREFIX_PATH}/offline-points`,\r\n      title: 'Оффлайн точки',\r\n      icon: ShopOutlined,\r\n      breadcrumb: false,\r\n      submenu: [\r\n        {\r\n          key: 'addresses',\r\n          path: `${APP_PREFIX_PATH}/offline-points/addresses`,\r\n          title: 'Комбо',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'zones',\r\n          path: `${APP_PREFIX_PATH}/offline-points/zones`,\r\n          title: 'Комбо',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      key: 'employees',\r\n      path: `${APP_PREFIX_PATH}/employees`,\r\n      title: 'Сотрудники',\r\n      icon: TeamOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'mailings',\r\n      path: `${APP_PREFIX_PATH}/mailings`,\r\n      title: 'Расслыки',\r\n      icon: MailOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n  ]\r\n},\r\n{\r\n  key: 'system',\r\n  path: `${APP_PREFIX_PATH}/system`,\r\n  title: 'Системные',\r\n  icon: DashboardOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'settings',\r\n      path: `${APP_PREFIX_PATH}/system/settings`,\r\n      title: 'Настройки',\r\n      icon: SettingOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'app',\r\n      path: `${APP_PREFIX_PATH}/system/app`,\r\n      title: 'Мобильное приложение',\r\n      icon: MobileOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'logs',\r\n      path: `${APP_PREFIX_PATH}/system/logs`,\r\n      title: 'Логи',\r\n      icon: ProfileOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }\r\n  ]\r\n}\r\n]\r\n\r\n\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV,\r\n  SWITCH_THEME\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n\r\nexport function onSwitchTheme(currentTheme) {\r\n  return {\r\n    type: SWITCH_THEME,\r\n    currentTheme\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { SketchPicker } from 'react-color';\r\n\r\nconst ColorPicker = props => {\r\n\r\n\tconst { colorChange, color='' } = props\r\n\r\n\tconst [visible, setVisible] = useState(false);\r\n\tconst [pickerColor, setPickerColor] = useState(color)\r\n\tconst [boxColor, setBoxColor] = useState(color)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetBoxColor(color);\r\n\t\tsetPickerColor(color)\r\n\t}, [color]);\r\n\r\n\tconst onPickerDropdown = () => {\r\n\t\tsetVisible(!visible)\r\n\t}\r\n\r\n\tconst onColorChange = (value) => {\r\n\t\tconst {rgb} = value\r\n\t\tconst rgba = `rgb(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tsetBoxColor(rgba)\r\n\t\tsetPickerColor(rgb)\r\n\t\tcolorChange(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"color-picker\">\r\n\t\t\t<div className=\"color-picker-dropdown\">\r\n\t\t\t\t<div className=\"color\" style={{backgroundColor: boxColor ? boxColor : '#ffffff'}} onClick={onPickerDropdown} />\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tvisible && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div className=\"color-picker-backdrop\" onClick={onPickerDropdown}/>\r\n\t\t\t\t\t\t<SketchPicker color={pickerColor} onChange={onColorChange}/>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nColorPicker.propTypes = {\r\n\tcolor: PropTypes.string,\r\n\tcolorChange: PropTypes.func\r\n}\r\n\r\n\r\nexport default ColorPicker;\r\n","import React from \"react\";\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport lang from \"assets/data/language.data.json\";\r\nimport { connect } from \"react-redux\";\r\nimport { onLocaleChange } from 'redux/actions/Theme'\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = ({ locale }) => {\r\n\tconst language = getLanguageDetail(locale)\r\n\tconst {langName, icon} = language\r\n\treturn (\r\n\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport const NavLanguage = ({ locale, configDisplay, onLocaleChange }) => {\r\n\tconst languageOption = (\r\n\t\t<Menu>\r\n\t\t\t{\r\n\t\t\t\tlang.map((elm, i) => {return (\r\n\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tclassName={locale === elm.langId? 'ant-dropdown-menu-item-active': ''} \r\n\t\t\t\t\t\tonClick={() => onLocaleChange(elm.langId)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${elm.icon}.png`} alt={elm.langName}/>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{elm.langName}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{locale === elm.langId? <CheckOutlined className=\"text-success\" /> : null}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t)})\r\n\t\t\t}\r\n\t\t</Menu>\r\n\t)\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" overlay={languageOption} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage locale={locale}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<Menu mode=\"horizontal\">\r\n\t\t\t\t\t\t<Menu.Item>\r\n\t\t\t\t\t\t\t<a href=\"#/\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps, {onLocaleChange})(NavLanguage);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport ThemeConfigurator from './ThemeConfigurator';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          <ThemeConfigurator/>\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { APP_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${APP_PREFIX_PATH}/home`} component={lazy(() => import(`./home`))} />\r\n        <Route path={`${APP_PREFIX_PATH}/clients`} component={lazy(()=>import('./pages'))}/>\r\n        <Redirect from={`${APP_PREFIX_PATH}`} to={`${APP_PREFIX_PATH}/home`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppViews);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\nimport { AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const AppViews = () => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${AUTH_PREFIX_PATH}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${AUTH_PREFIX_PATH}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${AUTH_PREFIX_PATH}`} to={`${AUTH_PREFIX_PATH}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import antdZhCn from 'antd/es/locale/zh_CN';\r\nimport zhMsg from \"../locales/zh_CN.json\";\r\n\r\nconst ZhLang = {\r\n  antd: antdZhCn,\r\n  locale: 'zh',\r\n  messages: {\r\n    ...zhMsg\r\n  },\r\n};\r\nexport default ZhLang;\r\n","import antdFrFR from 'antd/es/locale/fr_FR';\r\nimport frMsg from \"../locales/fr_FR.json\";\r\n\r\nconst FrLang = {\r\n  antd: antdFrFR,\r\n  locale: 'fr-FR',\r\n  messages: {\r\n    ...frMsg\r\n  },\r\n};\r\nexport default FrLang;\r\n","import enLang from './entries/en_US';\r\nimport zhLang from './entries/zh_CN';\r\nimport frLang from './entries/fr_FR';\r\nimport jaLang from './entries/ja_JP'\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    zh: zhLang,\r\n    fr: frLang,\r\n    ja: jaLang\r\n};\r\n\r\nexport default AppLocale;","import antdJaJP from 'antd/es/locale/ja_JP';\r\nimport jaMsg from \"../locales/ja_JP.json\";\r\n\r\nconst JaLang = {\r\n  antd: antdJaJP,\r\n  locale: 'ja-JP',\r\n  messages: {\r\n    ...jaMsg\r\n  },\r\n};\r\nexport default JaLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\nexport const Views = (props) => {\r\n  const { locale, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path={APP_PREFIX_PATH}>\r\n            <AppLayout location={location}/>\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport { THEME_CONFIG } from './configs/AppConfig';\r\n\r\nconst themes = {\r\n  dark: `${process.env.PUBLIC_URL}/css/dark-theme.css`,\r\n  light: `${process.env.PUBLIC_URL}/css/light-theme.css`,\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <ThemeSwitcherProvider themeMap={themes} defaultTheme={THEME_CONFIG.currentTheme} insertionPoint=\"styles-insertion-point\">\r\n          <Router>\r\n            <Switch>\r\n              <Route path=\"/\" component={Views}/>\r\n            </Switch>\r\n          </Router>\r\n        </ThemeSwitcherProvider>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n"],"sourceRoot":""}